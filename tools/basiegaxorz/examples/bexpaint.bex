	disable screen

	loadtiles tools, 1, 128
	loadtiles colors, 8, 136
	pallettes pallette,1,0,16

	cls
	option TEXTSTART,0,1
	locate 0,0
	print "BEX Paint"
	print "Written by devster"
	print "With BEX and the power of assembly!"

	i=256
	for y=3 to 27
		for x=0 to 39
			drawtile i+8192,x,y
			i++
		next
	next
	p=1
	
	for y=0 to 199
		for x=0 to 319
			draw_dot_fast4 x,y,7
		next
	next

	enable screen
	
	x = 160
	y = 100
	pa = 1
	pb = 7
	
	tool = addsprite(1,1)
	propsprite tool, 128, 1

	while 1
		sleep 1, TVBLANK
		movesprite tool, 128+x, 128+y
		joy = joypad()
		if joy.0 and y<>0 then
			y--
		elseif joy.1 and y<>216 then
			y++
		endif
		if joy.2 and x<>0 then
			x--
		elseif joy.3 and x<>319 then
			x++
		endif
		if joy.6 then
			if y>16 then
				draw_dot_fast4 x,y-17,pa
			elseif y>0 and x>=64 and x<=127 then
				pa = (x-64)/8;
			endif
		endif
		if joy.4 then
			if y>16 then
				draw_dot_fast4 x,y-17,pb
			elseif y>0 and x>=64 and x<=127 then
				pb = (x-64)/8;
			endif
		endif
		if y<=16 then
			locate 1,0: print "COLOR:            CURRENT:            "
			locate 2,0: print "                                      "
			c=8192
			for a=8 to 15
				drawtile 136+c,a,1
				c++
			next
			drawtile 8192+136+pa,28,1
			drawtile 8192+136+pb,29,1
		endif
	wend

' draw_dot_fast4 x, y, pallette
declare asm sub draw_dot_fast4(d3.l, d0.l, d7.l)
	move.l	d0,d1		; Calculate dy
	and.b	#$F8,d1
	lsl.l	#5,d1
	mulu	#5,d1
	move.l	d0,d2		; Calculate ddy
	and.l	#$07,d2
	lsl.l	#2,d2
	move.l	d3,d0		; Calculate dx
	and.b	#$F8,d3
	lsl.l	#2,d3
;	lsr.l	#3,d3
;	lsl.l	#5,d3
	move.l	d0,d4		; Caclulate ddx
	and.l	#$07,d4
;	lsr.l	#2,d4
;	lsl.l	#1,d4
	and.b	#$FC,d4
	lsr.l	#1,d4
	move.l	d0,d5		; Calculate dddx
	and.l	#$03,d5
	bne		@1
	swap	d7
	lsr.l	#4,d7
	move.w	#$0FFF,d6
	bra		@4
@1:
	subq.w	#1,d5
	bne		@2
	lsl.w	#8,d7
	move.w	#$F0FF,d6
	bra		@4
@2:
	subq.w	#1,d5
	bne		@3
	lsl.w	#4,d7
	move.w	#$FF0F,d6
	bra		@4
@3:
	move.w	#$FFF0,d6	; Calculate ddddx
@4:
	move.l	#8192,d0
	add.w	d1,d0
	add.w	d2,d0
	add.w	d3,d0
	add.w	d4,d0
	move	#$2700,sr
	lsl.l	#2,d0
	lsr.w	#2,d0
	swap	d0
	move.l	d0,4(a4)
	move.w	(a4),d1
	and.w	d6,d1
	add.w	d1,d7
	add.l	#$40000000,d0
	move.l	d0,4(a4)
	move.w	d7,(a4)
	move	#$2000,sr
end function

pallette:
	DATAINT	$0000,$000E,$00E0,$00EE,$0E00,$0E0E,$0EE0,$0EEE
	DATAINT	$0000,$0088,$0808,$0008,$0880,$0080,$0800,$0000

tools:
	DATALONG $00000011
	DATALONG $00000311
	DATALONG $00003330
	DATALONG $00033300
	DATALONG $00333000
	DATALONG $03330000
	DATALONG $33300000
	DATALONG $83000000

colors:
	DATALONG $77777777
	DATALONG $70000000
	DATALONG $70000000
	DATALONG $70000000
	DATALONG $70000000
	DATALONG $70000000
	DATALONG $70000000
	DATALONG $77777777

	DATALONG $77777777
	DATALONG $71111111
	DATALONG $71111111
	DATALONG $71111111
	DATALONG $71111111
	DATALONG $71111111
	DATALONG $71111111
	DATALONG $77777777
	
	DATALONG $77777777
	DATALONG $72222222
	DATALONG $72222222
	DATALONG $72222222
	DATALONG $72222222
	DATALONG $72222222
	DATALONG $72222222
	DATALONG $77777777
	
	DATALONG $77777777
	DATALONG $73333333
	DATALONG $73333333
	DATALONG $73333333
	DATALONG $73333333
	DATALONG $73333333
	DATALONG $73333333
	DATALONG $77777777
	
	DATALONG $77777777
	DATALONG $74444444
	DATALONG $74444444
	DATALONG $74444444
	DATALONG $74444444
	DATALONG $74444444
	DATALONG $74444444
	DATALONG $77777777
	
	DATALONG $77777777
	DATALONG $75555555
	DATALONG $75555555
	DATALONG $75555555
	DATALONG $75555555
	DATALONG $75555555
	DATALONG $75555555
	DATALONG $77777777
	
	DATALONG $77777777
	DATALONG $76666666
	DATALONG $76666666
	DATALONG $76666666
	DATALONG $76666666
	DATALONG $76666666
	DATALONG $76666666
	DATALONG $77777777
	
	DATALONG $77777777
	DATALONG $77777777
	DATALONG $77777777
	DATALONG $77777777
	DATALONG $77777777
	DATALONG $77777777
	DATALONG $77777777
	DATALONG $77777777
	